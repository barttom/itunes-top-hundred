{"version":3,"sources":["components/SingleAlbum/SingleAlbum.js","components/Albums/Albums.js","components/SearchBar/SearchBar.js","components/App/App.js","utils/api.js","serviceWorker.js","index.js"],"names":["SingleAlbum","_ref","album","react_default","a","createElement","className","src","label","alt","title","href","link","attributes","target","rel","dist","size","Albums","albums","length","map","components_SingleAlbum_SingleAlbum","key","id","role","SearchBar","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","changeHandler","event","setState","defineProperty","name","value","searchAlbum","onSearch","state","textFilter","prevProps","prevState","_this2","type","onChange","onKeyPress","onClick","Component","App","filterAlbumsByText","trim","cachedAlbums","filter","toLowerCase","includes","callback","arguments","undefined","axios","get","then","data","feed","getData","entry","_this$state","components_SearchBar_SearchBar","components_Albums_Albums","react_scroll_up_default","showUnder","style","right","bottom","Boolean","window","location","hostname","match","ReactDOM","render","components_App_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6af26d52.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./_SingleAlbum.scss\";\nimport { ExternalLink } from \"react-feather\";\n\nconst SingleAlbum = ({ album }) => (\n  <li className=\"single-album\">\n    <div className=\"single-album__cover\">\n      <img\n        className=\"\"\n        src={album[\"im:image\"][2].label}\n        alt={album.title.label}\n      />\n    </div>\n    <div className=\"single-album__desc\">\n      <h5 className=\"single-album__title\">{album[\"im:name\"].label}</h5>\n      <h6 className=\"single-album__artist\">{album[\"im:artist\"].label}</h6>\n      <a\n        href={album.link.attributes.href}\n        className=\"link\"\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n      >\n        Read more <ExternalLink size={14} />\n      </a>\n    </div>\n  </li>\n);\n\nSingleAlbum.propTypes = {\n  album: PropTypes.object\n};\n\nexport default SingleAlbum;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport SingleAlbum from \"../SingleAlbum/SingleAlbum\";\nimport \"./_Albums.scss\";\n\nconst Albums = ({ albums }) =>\n  albums.length > 0 ? (\n    <ul className=\"list-unstyled albums\">\n      {albums.map(album => (\n        <SingleAlbum key={album.id.label} album={album} />\n      ))}\n    </ul>\n  ) : (\n    <div\n      className=\"alert alert-primary text-center col-sm-8 offset-sm-2\"\n      role=\"alert\"\n    >\n      no results :(\n    </div>\n  );\n\nAlbums.propTypes = {\n  albums: PropTypes.array\n};\n\nexport default Albums;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Search } from \"react-feather\";\nimport \"./_SearchBar.scss\";\n\nclass SearchBar extends Component {\n  static propTypes = {\n    onSearch: PropTypes.func\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      textFilter: \"\"\n    };\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.textFilter.length > 0 && this.state.textFilter.length === 0) {\n      this.searchAlbum();\n    }\n  }\n\n  changeHandler = event => {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  };\n\n  searchAlbum = () => {\n    this.props.onSearch(this.state.textFilter);\n  };\n\n  render() {\n    return (\n      <section className=\"search-bar\">\n        <div className=\"search-bar__text\">\n          <input\n            className=\"form-control\"\n            type=\"text\"\n            name=\"textFilter\"\n            value={this.state.textFilter}\n            onChange={this.changeHandler}\n            onKeyPress={event => {\n              if (event.key === \"Enter\") {\n                this.searchAlbum();\n              }\n            }}\n          />\n          <button className=\"btn btn-primary\" onClick={this.searchAlbum}>\n            <Search />\n          </button>\n        </div>\n      </section>\n    );\n  }\n}\n\nexport default SearchBar;\n","import React, { Component } from \"react\";\nimport { getData } from \"../../utils/api\";\nimport Albums from \"../Albums/Albums\";\nimport \"./_App.scss\";\nimport SearchBar from \"../SearchBar/SearchBar\";\nimport ScrollToTop from \"react-scroll-up\";\nimport { ArrowUp } from \"react-feather\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      albums: [],\n      cachedAlbums: []\n    };\n  }\n\n  componentDidMount() {\n    getData(data => {\n      this.setState({\n        albums: data.entry,\n        cachedAlbums: data.entry\n      });\n    });\n  }\n\n  filterAlbumsByText = textFilter => {\n    if (textFilter.trim().length === 0) {\n      this.setState({ albums: this.state.cachedAlbums });\n    } else {\n      const albums = this.state.cachedAlbums.filter(album =>\n        album.title.label\n          .toLowerCase()\n          .trim()\n          .includes(textFilter.toLowerCase().trim())\n      );\n      this.setState({\n        albums\n      });\n    }\n  };\n\n  render() {\n    const { albums, cachedAlbums } = this.state;\n    return cachedAlbums.length > 0 ? (\n      <main id=\"itunes-top-hundred\" className=\"main-app faded\">\n        <div className=\"container-fluid\">\n          <header className=\"main-app__header\">\n            <h1>Top 100 albums</h1>\n          </header>\n          <SearchBar onSearch={this.filterAlbumsByText} />\n          <Albums albums={albums} />\n        </div>\n        <ScrollToTop\n          showUnder={320}\n          style={{\n            right: \"15px\",\n            bottom: \"15px\"\n          }}\n        >\n          <span>\n            <ArrowUp size={30} />\n          </span>\n        </ScrollToTop>\n      </main>\n    ) : (\n      <div className=\"loader\">\n        <span>Loading</span>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import axios from \"axios\";\n\nconst API_URL = `https://itunes.apple.com/us/rss/topalbums/limit=100/json`;\n\nexport const getData = (callback = () => {}) => {\n  axios.get(API_URL).then(({ data }) => callback(data.feed));\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the App load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web App is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different App. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './components/App/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your App to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}